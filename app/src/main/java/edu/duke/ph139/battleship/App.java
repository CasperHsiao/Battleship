
/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ph139.battleship;

import java.io.BufferedReader;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;

public class App {
  final TextPlayer p1;
  final TextPlayer p2;

  /**
   * Constructs a battleship game with the specified TextPlayer.
   * 
   * @param p1 is player 1 of the game.
   * @param p2 is player 2 of the game.
   */
  public App(TextPlayer p1, TextPlayer p2) {
    this.p1 = p1;
    this.p2 = p2;
  }

  /**
   * Runs the placement phase of the battleship game. Lets player 1 play the
   * placement phase of the game followed by player 2.
   * 
   * @throws IOException
   */
  public void doPlacementPhase() throws IOException {
    p1.doPlacementPhase();
    p2.doPlacementPhase();
  }

  /**
   * Runs the attacking phase of the battleship game. Lets player 1 play one
   * attacking turn, and check if player 2 has lost. Then let player 2 play one
   * attacking turn, and check if player 1 has lost. Repeat this process until one
   * player has lost.
   * 
   * @param p1 player 1 of the game
   * @param p2 player 2 of the game
   * @throws IOException
   */
  public void doAttackingPhase(TextPlayer p1, TextPlayer p2) throws IOException {
    while (true) {
      p1.doAttackingPhase(p2.theBoard, p2.view, "Player " + p2.name + "'s ocean");
      if (p2.hasLost()) {
        break;
      }
      p2.doAttackingPhase(p1.theBoard, p1.view, "Player " + p1.name + "'s ocean");
      if (p1.hasLost()) {
        break;
      }
    }
  }

  /**
   * Announces the winner of the battleship game by checking the boards of the
   * players.
   * 
   * @param p1 player 1 of the game
   * @param p2 player 2 of the game
   */
  public void announceWinner(TextPlayer p1, TextPlayer p2) {
    if (p1.hasLost()) {
      p2.out.println("Player " + p2.name + " has won!");
    } else {
      p1.out.println("Player " + p1.name + " has won!");
    }
  }

  /**
   * Prompts the user to choose whether the players will be computer or human.
   * 
   * @param inputReader is the user input reader.
   * @param out         is the game output for user.
   * @param f           is the factory to create player's ships.
   * @param playerName  is the name of the player.
   * @param theBoard    is the player's board.
   * @return the TextPlayer constructed according to the user's input
   * @throws IllegalArgumentException if the enter command is not Y or N.
   */
  public static TextPlayer promptPlayer(BufferedReader inputReader, PrintStream out, AbstractShipFactory<Character> f,
      Board<Character> b, String playerName) throws IOException {
    out.print("Do you want Player " + playerName + " to be a computer? [Y/N]\n");
    while (true) {
      try {
        String s = inputReader.readLine();
        if (s == null) {
          throw new EOFException();
        }
        s = s.toUpperCase();
        if (!s.equals("Y") && !s.equals("N")) {
          throw new IllegalArgumentException("Please enter Y or N.");
        }
        if (s.equals("Y")) {
          return new ComputerPlayer(b, out, f, playerName);
        } else {
          return new V2TextPlayer(b, inputReader, out, f, playerName);
        }
      } catch (IllegalArgumentException e) {
        out.println(e.getMessage() + "\n");
      }
    }

  }

  /**
   * Runs one battleship game of two TextPlayers. Prints game output to System.out
   * and reads input from System.in.
   */
  public static void main(String[] args) throws IOException {
    Board<Character> b1 = new BattleShipBoard<>(10, 20, 'X');
    Board<Character> b2 = new BattleShipBoard<>(10, 20, 'X');
    AbstractShipFactory<Character> shipFactory = new V2ShipFactory();
    BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
    TextPlayer p1 = promptPlayer(input, System.out, shipFactory, b1, "A");
    TextPlayer p2 = promptPlayer(input, System.out, shipFactory, b2, "B");
    App app = new App(p1, p2);
    app.doPlacementPhase();
    app.doAttackingPhase(p1, p2);
    app.announceWinner(p1, p2);
  }
}
